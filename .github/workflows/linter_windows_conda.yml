name: Quick Linter

on:
  pull_request:
    branches: [ master ]

env:
  GDAL_VERSION: 3.0.4
  PROJECT_FOLDER: "dicogis"

jobs:
  lint-windows:

    runs-on: windows-latest

    steps:
    - name: Get source code
      uses: actions/checkout@v2

    - name: Cache conda
      uses: actions/cache@v1
      env:
        CACHE_NUMBER: 0
      with:
        path: ~/conda_pkgs_dir
        key: ${{ runner.os }}-conda-${{ env.CACHE_NUMBER }}-${{ hashFiles('requirements/conda-env-dev.yml') }}

    - name: Setup conda environment
      uses: conda-incubator/setup-miniconda@v1.7.0
      with:
        activate-environment: dicogis-dev
        channels: conda-forge,defaults
        channel-priority: true
        environment-file: requirements/conda-env-dev.yml
        mamba-version: "*"
        python-version: 3.7
        use-only-tar-bz2: true # IMPORTANT: This needs to be set for caching to work properly!

    - name: Install project as a package
      run: python -m pip install -e .

    - name: Lint with flake8
      run: |
        # stop the build if there are Python syntax errors or undefined names
        flake8 ${{ env.PROJECT_FOLDER }} --count --select=E9,F63,F7,F82 --show-source --statistics
        # exit-zero treats all errors as warnings.
        flake8 ${{ env.PROJECT_FOLDER }} --count --exit-zero --statistics

    - name: Generates MS Version Info
      run: python .\builder\version_info_templater.py

    - name: Generates MS Executable
      run: python -O .\builder\pyinstaller_build_windows.py

    - name: Zip generated application folder
      uses: papeloto/action-zip@v1
      with:
        files: dist/DicoGIS
        dest: DicoGIS_windows_64bits.zip

    - name: Save it as artifact
      uses: actions/upload-artifact@v2
      with:
        name: DicoGIS_windows_executable
        path: DicoGIS_windows_64bits.zip
