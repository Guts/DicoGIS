name: Ubuntu Builder

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

env:
  GDAL_VERSION: 3.*
  PROJECT_FOLDER: "dicogis"

jobs:
  build-ubuntu:

    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-18.04, ubuntu-20.04]
        python: [3.7, 3.8]
    if: "!contains(github.event.head_commit.message, '[ci skip]') && !contains(github.event.head_commit.message, '[skip ci]')"

    steps:
    - name: Get source code
      uses: actions/checkout@v2

    - name: Set up Python
      uses: actions/setup-python@v1
      with:
        python-version: ${{ matrix.python }}

    - name: Install GDAL binaries
      run: |
        sudo add-apt-repository ppa:ubuntugis/ubuntugis-unstable && sudo apt-get update
        sudo apt-get install gdal-bin=${{ env.GDAL_VERSION }}
        sudo apt-get install libgdal-dev=${{ env.GDAL_VERSION }}
        export CPLUS_INCLUDE_PATH=/usr/include/gdal
        export C_INCLUDE_PATH=/usr/include/gdal
        gdal-config --version

    - name: Install complementary tools
      run: |
        sudo apt install python3-tk

    - uses: actions/cache@v2
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements/dev.txt') }}
        restore-keys: |
          ${{ runner.os }}-pip-

    - name: Install project requirements
      run: |
        python -m pip install -U pip setuptools wheel
        python -m pip install -U -r requirements/dev.txt
        python -m pip install GDAL==${{ env.GDAL_VERSION }}
        python -m pip install -e .

    - name: Generates Executable
      run: python -O ./builder/pyinstaller_build_ubuntu.py

    - uses: papeloto/action-zip@v1
      with:
        files: dist/DicoGIS
        dest: DicoGIS_ubuntu_64bits.zip

    - uses: actions/upload-artifact@v2
      with:
        name: DicoGIS_ubuntu_executable
        path: DicoGIS_ubuntu_64bits.zip
