name: "Build ðŸ“¦ and release ðŸš€"

# Triggers
on:
  push:
    branches: [ master ]

    paths:
      - '.github/workflows/release_publisher.yml'
      - 'builder/**/*'
      - 'dicogis/**/*.py'

    tags: "*"

# Globals
env:
  PROJECT_FOLDER: "dicogis"
  PYTHON_VERSION: 3.8
  PYINSTALLER_LOG_LEVEL: "DEBUG"

# Jobs definition
jobs:


  build-ubuntu:
    name: "Ubuntu packager ðŸ“¦"

    runs-on: ubuntu-20.04
    if: "!contains(github.event.head_commit.message, '[ci skip]') && !contains(github.event.head_commit.message, '[skip ci]')"

    env:
      GDAL_VERSION: 3.*

    steps:
    - name: Get source code
      uses: actions/checkout@v2

    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: ${{ env.PYTHON_VERSION }}

    - name: Install GDAL binaries
      run: |
        sudo add-apt-repository ppa:ubuntugis/ubuntugis-unstable && sudo apt-get update
        sudo apt install gdal-bin=${{ env.GDAL_VERSION }}
        sudo apt install libgdal-dev=${{ env.GDAL_VERSION }}
        export CPLUS_INCLUDE_PATH=/usr/include/gdal
        export C_INCLUDE_PATH=/usr/include/gdal
        gdal-config --version

    - name: Install complementary tools
      run: |
        sudo apt install python3-tk

    - uses: actions/cache@v2
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ hashFiles('requirements/*.txt') }}
        restore-keys: |
          ${{ runner.os }}-pip-

    - name: Install project requirements
      run: |
        python -m pip install -U pip setuptools wheel
        python -m pip install -U -r requirements/base.txt
        python -m pip install -U -r requirements/dev.txt
        python -m pip install GDAL=="`gdal-config --version`.*"
        python -m pip install -e .

    - name: Generates Executable
      run: python -O ./builder/pyinstaller_build_ubuntu.py

    - uses: actions/upload-artifact@v2
      with:
        name: DicoGIS_ubuntu_executable
        path: dist/DicoGIS*/


  build-windows:
    name: "Windows packager ðŸ“¦"

    runs-on: windows-latest
    if: "!contains(github.event.head_commit.message, '[ci skip]') && !contains(github.event.head_commit.message, '[skip ci]')"

    env:
      GDAL_VERSION: 3.1.3

    steps:
    - name: Get source code
      uses: actions/checkout@v2

    - name: Cache conda
      uses: actions/cache@v1
      with:
        path: ~/conda_pkgs_dir
        key: ${{ runner.os }}-conda-${{ env.CACHE_NUMBER }}-${{ hashFiles('requirements/conda-env-dev.yml') }}

    - name: Setup conda environment
      uses: conda-incubator/setup-miniconda@v2.0.1
      with:
        activate-environment: dicogis-dev
        auto-update-conda: true
        channels: conda-forge,defaults
        channel-priority: true
        environment-file: requirements/conda-env-dev.yml
        python-version: ${{ env.PYTHON_VERSION }}
        use-only-tar-bz2: true

    - name: Install project as a package
      run: python -m pip install -e .

    - name: Generates MS Version Info
      run: python .\builder\version_info_templater.py

    - name: Generates MS Executable
      run: python -O .\builder\pyinstaller_build_windows.py

    - name: Save it as artifact
      uses: actions/upload-artifact@v2
      with:
        name: DicoGIS_windows_executable
        path: dist/DicoGIS*
