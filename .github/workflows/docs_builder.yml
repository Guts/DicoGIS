name: Documentation Builder

on:
  push:
    branches: [master]
    paths:
      - 'docs/**/*'
      - '.github/workflows/docs_builder.yml'
      - 'dicogis/**/*.py'

env:
  GDAL_VERSION: 3.*
  PYTHON_VERSION: 3.8

jobs:
  build-docs:

    runs-on: ubuntu-20.04
    if: "!contains(github.event.head_commit.message, '[ci skip]') && !contains(github.event.head_commit.message, '[skip ci]')"

    steps:
    - name: Get source code
      uses: actions/checkout@v2

    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: ${{ env.PYTHON_VERSION }}

    - name: Install GDAL binaries
      run: |
        sudo add-apt-repository ppa:ubuntugis/ubuntugis-unstable && sudo apt-get update
        sudo apt install gdal-bin=${{ env.GDAL_VERSION }}
        sudo apt install libgdal-dev=${{ env.GDAL_VERSION }}
        export CPLUS_INCLUDE_PATH=/usr/include/gdal
        export C_INCLUDE_PATH=/usr/include/gdal
        gdal-config --version

    - name: Install complementary tools
      run: |
        sudo apt install python3-tk

    - uses: actions/cache@v2.1.6
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ hashFiles('requirements/*.txt') }}
        restore-keys: |
          ${{ runner.os }}-pip-

    - name: Install project requirements
      run: |
        python -m pip install -U pip setuptools wheel
        python -m pip install -U -r requirements/base.txt
        python -m pip install -U -r requirements/dev.txt
        python -m pip install -U -r requirements/docs.txt
        python -m pip install GDAL=="`gdal-config --version`.*"
        python -m pip install -e .

    - name: Build doc using Sphinx
      run: sphinx-build -b html docs docs/_build/html

    - name: Deploy to GitHub Pages
      run: ghp-import --force --no-history --no-jekyll --push docs/_build/html
