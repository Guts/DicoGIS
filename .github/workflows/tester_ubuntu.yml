name: "Tester ðŸŽ³"

on:
  push:
    branches: [ master ]
    paths:
      - '**/*.py'
      - '.github/workflows/tester_ubuntu.yml'
  pull_request:
    branches: [ master ]
    paths:
      - '**/*.py'
      - '.github/workflows/tester_ubuntu.yml'

env:
  GDAL_VERSION: 3.*
  PROJECT_FOLDER: "dicogis"
  PYTHON_VERSION: 3.8

jobs:
  test-ubuntu:

    runs-on: ubuntu-20.04

    steps:
    - name: Get source code
      uses: actions/checkout@v2

    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: ${{ env.PYTHON_VERSION }}

    - name: Install GDAL binaries
      run: |
        sudo add-apt-repository ppa:ubuntugis/ubuntugis-unstable && sudo apt-get update
        sudo apt install gdal-bin=${{ env.GDAL_VERSION }}
        sudo apt install libgdal-dev=${{ env.GDAL_VERSION }}
        export CPLUS_INCLUDE_PATH=/usr/include/gdal
        export C_INCLUDE_PATH=/usr/include/gdal
        gdal-config --version

    - name: Install complementary tools
      run: |
        sudo apt install python3-tk

    - uses: actions/cache@v2.1.6
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ hashFiles('requirements/*.txt') }}
        restore-keys: |
          ${{ runner.os }}-pip-

    - name: Install project requirements
      run: |
        python -m pip install -U pip setuptools wheel
        python -m pip install -U -r requirements/base.txt
        python -m pip install -U -r requirements/dev.txt
        python -m pip install GDAL=="`gdal-config --version`.*"
        python -m pip install -e .

    - name: Install project as a package
      run: python -m pip install -e .

    - name: Install tests fixtures
      run: python -m pip install -U gisdata -t ./tests/fixtures

    - name: Unit tests
      run: pytest

    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v2.0.2
