name: Windows Builder

on:
  push:
    branches: [ master ]

jobs:
  build-windows:

    runs-on: windows-latest
    if: "!contains(github.event.head_commit.message, '[ci skip]') && !contains(github.event.head_commit.message, '[skip ci]')"

    steps:
    - name: Get source code
      uses: actions/checkout@v2

    - name: Set up Python 3.7
      uses: actions/setup-python@v1
      with:
        python-version: 3.7

    - name: Download GDAL Core for Windows
      uses: carlosperate/download-file-action@v1.0.3
      id: download-gdal-core
      with:
        # URL of the file to download
        file-url: http://download.gisinternals.com/sdk/downloads/release-1911-x64-gdal-3-0-4-mapserver-7-4-3/gdal-300-1911-x64-core.msi
        # New filename to rename the downloaded file
        file-name: gdal-core.msi
        location: "."

    - name: Install GDAL Core
      run: ./gdal-core.msi /quiet

    - name: Download GDAL Python bindings for Windows
      uses: carlosperate/download-file-action@v1.0.3
      id: download-gdal-py-bindings
      with:
        # URL of the file to download
        file-url: http://download.gisinternals.com/sdk/downloads/release-1911-x64-gdal-3-0-4-mapserver-7-4-3/GDAL-3.0.4.win-amd64-py3.7.msi
        # New filename to rename the downloaded file
        file-name: gdal-python-bindings.msi
        location: "."

    - name: Install GDAL Python Bindings
      run: ./gdal-python-bindings.msi /quiet

    - name: Add GDAL to the path
      run: echo "::add-path::C:\Program Files\GDAL"

    - name: Cache pip
      # https://github.com/actions/cache/blob/master/examples.md#python---pip
      uses: actions/cache@v1
      with:
        path: ~\AppData\Local\pip\Cache # This path is specific to Windows
        # Look to see if there is a cache hit for the corresponding requirements file
        key: ${{ runner.os }}-pip-${{ hashFiles('requirements/dev.txt') }}
        restore-keys: |
          ${{ runner.os }}-pip-
          ${{ runner.os }}-

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip setuptools wheel
        python -m pip install -U -r requirements/dev.txt
        python -m pip install -e .

    - name: Generates MS Version Info
      run: python .\builder\version_info_templater.py

    - name: Generates MS Executable
      run: python -O .\builder\pyinstaller_build_windows.py

    - uses: papeloto/action-zip@v1
      with:
        files: dist/DicoGIS
        dest: DicoGIS_win32_64bits.zip

    - uses: actions/upload-artifact@v2
      with:
        name: DicoGIS_windows_executable
        path: DicoGIS_win32_64bits.zip
